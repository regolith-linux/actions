name: Publish Repository
description: |
  Publish packages of supported distro(s), codename(s), and component(s) to a new
  or existing archive repository.

inputs:
  packages-path-base:
    description: "Base path on the server to publish repository from"
    required: true
    default: "/opt/archives/packages/"
  packages-path-subfolder:
    description: "Name of the folder in 'packages-path-base' to publish repository from"
    required: false
    default: ""
  only-distro:
    description: "A filter to only publish repository for this distro"
    required: false
  only-codename:
    description: "A filter to only publish repository for this codename"
    required: false
  only-component:
    description: "A filter to only publish repository for this component"
    required: false

runs:
  using: composite
  steps:
    - name: Publish Package(s)
      shell: bash
      run: |
        PACKAGES_PATH_BASE="${{ inputs.packages-path-base }}"
        PACKAGES_PATH_FOLDER="${{ inputs.packages-path-subfolder }}"

        PACKAGES_PATH="${PACKAGES_PATH_BASE%/}/"

        if [ -n "$PACKAGES_PATH_FOLDER" ]; then
          PACKAGES_PATH+="${PACKAGES_PATH_FOLDER%/}/"
        fi

        PACKAGES_PATH+="run-${{ github.run_id }}/"

        ssh ${{ env.server-username }}@${{ env.server-address }} "publish-repos.sh \"${PACKAGES_PATH}\" \"${{ inputs.only-distro }}\" \"${{ inputs.only-codename }}\" \"${{ inputs.only-component }}\""

    - name: Failed Publish Package(s)
      shell: bash
      run: |
        PACKAGES_PATH_BASE="${{ inputs.packages-path-base }}"
        PACKAGES_PATH_FOLDER="${{ inputs.packages-path-subfolder }}"

        PACKAGES_PATH="${PACKAGES_PATH_BASE%/}/"

        if [ -n "$PACKAGES_PATH_FOLDER" ]; then
          PACKAGES_PATH+="${PACKAGES_PATH_FOLDER%/}/"
        fi

        PACKAGES_PATH+="run-${{ github.run_id }}/"

        ssh ${{ env.server-username }}@${{ env.server-address }} "find \"${PACKAGES_PATH}\""
